/*
 * Bridge
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ivms101

import (
	"encoding/json"
)

// LocalNaturalPersonNameId struct for LocalNaturalPersonNameId
type LocalNaturalPersonNameId struct {
	PrimaryIdentifier *string `json:"primary_identifier,omitempty"`
	SecondaryIdentifier *string `json:"secondary_identifier,omitempty"`
	NameIdentifierType *string `json:"name_identifier_type,omitempty"`
}

// NewLocalNaturalPersonNameId instantiates a new LocalNaturalPersonNameId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocalNaturalPersonNameId() *LocalNaturalPersonNameId {
	this := LocalNaturalPersonNameId{}
	return &this
}

// NewLocalNaturalPersonNameIdWithDefaults instantiates a new LocalNaturalPersonNameId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalNaturalPersonNameIdWithDefaults() *LocalNaturalPersonNameId {
	this := LocalNaturalPersonNameId{}
	return &this
}

// GetPrimaryIdentifier returns the PrimaryIdentifier field value if set, zero value otherwise.
func (o *LocalNaturalPersonNameId) GetPrimaryIdentifier() string {
	if o == nil || o.PrimaryIdentifier == nil {
		var ret string
		return ret
	}
	return *o.PrimaryIdentifier
}

// GetPrimaryIdentifierOk returns a tuple with the PrimaryIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalNaturalPersonNameId) GetPrimaryIdentifierOk() (*string, bool) {
	if o == nil || o.PrimaryIdentifier == nil {
		return nil, false
	}
	return o.PrimaryIdentifier, true
}

// HasPrimaryIdentifier returns a boolean if a field has been set.
func (o *LocalNaturalPersonNameId) HasPrimaryIdentifier() bool {
	if o != nil && o.PrimaryIdentifier != nil {
		return true
	}

	return false
}

// SetPrimaryIdentifier gets a reference to the given string and assigns it to the PrimaryIdentifier field.
func (o *LocalNaturalPersonNameId) SetPrimaryIdentifier(v string) {
	o.PrimaryIdentifier = &v
}

// GetSecondaryIdentifier returns the SecondaryIdentifier field value if set, zero value otherwise.
func (o *LocalNaturalPersonNameId) GetSecondaryIdentifier() string {
	if o == nil || o.SecondaryIdentifier == nil {
		var ret string
		return ret
	}
	return *o.SecondaryIdentifier
}

// GetSecondaryIdentifierOk returns a tuple with the SecondaryIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalNaturalPersonNameId) GetSecondaryIdentifierOk() (*string, bool) {
	if o == nil || o.SecondaryIdentifier == nil {
		return nil, false
	}
	return o.SecondaryIdentifier, true
}

// HasSecondaryIdentifier returns a boolean if a field has been set.
func (o *LocalNaturalPersonNameId) HasSecondaryIdentifier() bool {
	if o != nil && o.SecondaryIdentifier != nil {
		return true
	}

	return false
}

// SetSecondaryIdentifier gets a reference to the given string and assigns it to the SecondaryIdentifier field.
func (o *LocalNaturalPersonNameId) SetSecondaryIdentifier(v string) {
	o.SecondaryIdentifier = &v
}

// GetNameIdentifierType returns the NameIdentifierType field value if set, zero value otherwise.
func (o *LocalNaturalPersonNameId) GetNameIdentifierType() string {
	if o == nil || o.NameIdentifierType == nil {
		var ret string
		return ret
	}
	return *o.NameIdentifierType
}

// GetNameIdentifierTypeOk returns a tuple with the NameIdentifierType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalNaturalPersonNameId) GetNameIdentifierTypeOk() (*string, bool) {
	if o == nil || o.NameIdentifierType == nil {
		return nil, false
	}
	return o.NameIdentifierType, true
}

// HasNameIdentifierType returns a boolean if a field has been set.
func (o *LocalNaturalPersonNameId) HasNameIdentifierType() bool {
	if o != nil && o.NameIdentifierType != nil {
		return true
	}

	return false
}

// SetNameIdentifierType gets a reference to the given string and assigns it to the NameIdentifierType field.
func (o *LocalNaturalPersonNameId) SetNameIdentifierType(v string) {
	o.NameIdentifierType = &v
}

func (o LocalNaturalPersonNameId) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PrimaryIdentifier != nil {
		toSerialize["primary_identifier"] = o.PrimaryIdentifier
	}
	if o.SecondaryIdentifier != nil {
		toSerialize["secondary_identifier"] = o.SecondaryIdentifier
	}
	if o.NameIdentifierType != nil {
		toSerialize["name_identifier_type"] = o.NameIdentifierType
	}
	return json.Marshal(toSerialize)
}

type NullableLocalNaturalPersonNameId struct {
	value *LocalNaturalPersonNameId
	isSet bool
}

func (v NullableLocalNaturalPersonNameId) Get() *LocalNaturalPersonNameId {
	return v.value
}

func (v *NullableLocalNaturalPersonNameId) Set(val *LocalNaturalPersonNameId) {
	v.value = val
	v.isSet = true
}

func (v NullableLocalNaturalPersonNameId) IsSet() bool {
	return v.isSet
}

func (v *NullableLocalNaturalPersonNameId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocalNaturalPersonNameId(val *LocalNaturalPersonNameId) *NullableLocalNaturalPersonNameId {
	return &NullableLocalNaturalPersonNameId{value: val, isSet: true}
}

func (v NullableLocalNaturalPersonNameId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocalNaturalPersonNameId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


