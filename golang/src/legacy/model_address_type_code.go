/*
 * Bridge
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ivms101

import (
	"encoding/json"
	"fmt"
)

// AddressTypeCode the model 'AddressTypeCode'
type AddressTypeCode string

// List of AddressTypeCode
const (
	ADDRESSTYPECODE_HOME AddressTypeCode = "HOME"
	ADDRESSTYPECODE_BIZZ AddressTypeCode = "BIZZ"
	ADDRESSTYPECODE_GEOG AddressTypeCode = "GEOG"
)

func (v *AddressTypeCode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AddressTypeCode(value)
	for _, existing := range []AddressTypeCode{"HOME", "BIZZ", "GEOG"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AddressTypeCode", value)
}

// Ptr returns reference to AddressTypeCode value
func (v AddressTypeCode) Ptr() *AddressTypeCode {
	return &v
}

type NullableAddressTypeCode struct {
	value *AddressTypeCode
	isSet bool
}

func (v NullableAddressTypeCode) Get() *AddressTypeCode {
	return v.value
}

func (v *NullableAddressTypeCode) Set(val *AddressTypeCode) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressTypeCode) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressTypeCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressTypeCode(val *AddressTypeCode) *NullableAddressTypeCode {
	return &NullableAddressTypeCode{value: val, isSet: true}
}

func (v NullableAddressTypeCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressTypeCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
