/*
 * Bridge
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ivms101

import (
	"encoding/json"
	"fmt"
)

// LegalPersonNameTypeCode the model 'LegalPersonNameTypeCode'
type LegalPersonNameTypeCode string

// List of LegalPersonNameTypeCode
const (
	LEGALPERSONNAMETYPECODE_LEGL LegalPersonNameTypeCode = "LEGL"
	LEGALPERSONNAMETYPECODE_SHRT LegalPersonNameTypeCode = "SHRT"
	LEGALPERSONNAMETYPECODE_TRAD LegalPersonNameTypeCode = "TRAD"
)

func (v *LegalPersonNameTypeCode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := LegalPersonNameTypeCode(value)
	for _, existing := range []LegalPersonNameTypeCode{ "LEGL", "SHRT", "TRAD",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid LegalPersonNameTypeCode", value)
}

// Ptr returns reference to LegalPersonNameTypeCode value
func (v LegalPersonNameTypeCode) Ptr() *LegalPersonNameTypeCode {
	return &v
}

type NullableLegalPersonNameTypeCode struct {
	value *LegalPersonNameTypeCode
	isSet bool
}

func (v NullableLegalPersonNameTypeCode) Get() *LegalPersonNameTypeCode {
	return v.value
}

func (v *NullableLegalPersonNameTypeCode) Set(val *LegalPersonNameTypeCode) {
	v.value = val
	v.isSet = true
}

func (v NullableLegalPersonNameTypeCode) IsSet() bool {
	return v.isSet
}

func (v *NullableLegalPersonNameTypeCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLegalPersonNameTypeCode(val *LegalPersonNameTypeCode) *NullableLegalPersonNameTypeCode {
	return &NullableLegalPersonNameTypeCode{value: val, isSet: true}
}

func (v NullableLegalPersonNameTypeCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLegalPersonNameTypeCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

