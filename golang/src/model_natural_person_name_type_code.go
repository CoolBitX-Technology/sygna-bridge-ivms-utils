/*
 * Bridge
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ivms101

import (
	"encoding/json"
	"fmt"
)

// NaturalPersonNameTypeCode the model 'NaturalPersonNameTypeCode'
type NaturalPersonNameTypeCode string

// List of NaturalPersonNameTypeCode
const (
	NATURALPERSONNAMETYPECODE_ALIA NaturalPersonNameTypeCode = "ALIA"
	NATURALPERSONNAMETYPECODE_BIRT NaturalPersonNameTypeCode = "BIRT"
	NATURALPERSONNAMETYPECODE_MAID NaturalPersonNameTypeCode = "MAID"
	NATURALPERSONNAMETYPECODE_LEGL NaturalPersonNameTypeCode = "LEGL"
	NATURALPERSONNAMETYPECODE_MISC NaturalPersonNameTypeCode = "MISC"
)

func (v *NaturalPersonNameTypeCode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := NaturalPersonNameTypeCode(value)
	for _, existing := range []NaturalPersonNameTypeCode{ "ALIA", "BIRT", "MAID", "LEGL", "MISC",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid NaturalPersonNameTypeCode", value)
}

// Ptr returns reference to NaturalPersonNameTypeCode value
func (v NaturalPersonNameTypeCode) Ptr() *NaturalPersonNameTypeCode {
	return &v
}

type NullableNaturalPersonNameTypeCode struct {
	value *NaturalPersonNameTypeCode
	isSet bool
}

func (v NullableNaturalPersonNameTypeCode) Get() *NaturalPersonNameTypeCode {
	return v.value
}

func (v *NullableNaturalPersonNameTypeCode) Set(val *NaturalPersonNameTypeCode) {
	v.value = val
	v.isSet = true
}

func (v NullableNaturalPersonNameTypeCode) IsSet() bool {
	return v.isSet
}

func (v *NullableNaturalPersonNameTypeCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNaturalPersonNameTypeCode(val *NaturalPersonNameTypeCode) *NullableNaturalPersonNameTypeCode {
	return &NullableNaturalPersonNameTypeCode{value: val, isSet: true}
}

func (v NullableNaturalPersonNameTypeCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNaturalPersonNameTypeCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

