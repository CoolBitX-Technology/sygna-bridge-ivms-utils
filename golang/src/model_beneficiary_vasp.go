/*
 * Bridge
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ivms101

import (
	"encoding/json"
)

// BeneficiaryVasp struct for BeneficiaryVasp
type BeneficiaryVasp struct {
	BeneficiaryVasp *Person `json:"beneficiary_vasp,omitempty"`
}

// NewBeneficiaryVasp instantiates a new BeneficiaryVasp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeneficiaryVasp() *BeneficiaryVasp {
	this := BeneficiaryVasp{}
	return &this
}

// NewBeneficiaryVaspWithDefaults instantiates a new BeneficiaryVasp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeneficiaryVaspWithDefaults() *BeneficiaryVasp {
	this := BeneficiaryVasp{}
	return &this
}

// GetBeneficiaryVasp returns the BeneficiaryVasp field value if set, zero value otherwise.
func (o *BeneficiaryVasp) GetBeneficiaryVasp() Person {
	if o == nil || o.BeneficiaryVasp == nil {
		var ret Person
		return ret
	}
	return *o.BeneficiaryVasp
}

// GetBeneficiaryVaspOk returns a tuple with the BeneficiaryVasp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeneficiaryVasp) GetBeneficiaryVaspOk() (*Person, bool) {
	if o == nil || o.BeneficiaryVasp == nil {
		return nil, false
	}
	return o.BeneficiaryVasp, true
}

// HasBeneficiaryVasp returns a boolean if a field has been set.
func (o *BeneficiaryVasp) HasBeneficiaryVasp() bool {
	if o != nil && o.BeneficiaryVasp != nil {
		return true
	}

	return false
}

// SetBeneficiaryVasp gets a reference to the given Person and assigns it to the BeneficiaryVasp field.
func (o *BeneficiaryVasp) SetBeneficiaryVasp(v Person) {
	o.BeneficiaryVasp = &v
}

func (o BeneficiaryVasp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BeneficiaryVasp != nil {
		toSerialize["beneficiary_vasp"] = o.BeneficiaryVasp
	}
	return json.Marshal(toSerialize)
}

type NullableBeneficiaryVasp struct {
	value *BeneficiaryVasp
	isSet bool
}

func (v NullableBeneficiaryVasp) Get() *BeneficiaryVasp {
	return v.value
}

func (v *NullableBeneficiaryVasp) Set(val *BeneficiaryVasp) {
	v.value = val
	v.isSet = true
}

func (v NullableBeneficiaryVasp) IsSet() bool {
	return v.isSet
}

func (v *NullableBeneficiaryVasp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeneficiaryVasp(val *BeneficiaryVasp) *NullableBeneficiaryVasp {
	return &NullableBeneficiaryVasp{value: val, isSet: true}
}

func (v NullableBeneficiaryVasp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeneficiaryVasp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


