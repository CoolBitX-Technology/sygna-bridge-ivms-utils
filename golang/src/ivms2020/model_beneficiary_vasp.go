/*
Bridge

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ivms101

import (
	"encoding/json"
)

// checks if the BeneficiaryVASP type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BeneficiaryVASP{}

// BeneficiaryVASP struct for BeneficiaryVASP
type BeneficiaryVASP struct {
	BeneficiaryVASP *Person `json:"beneficiaryVASP,omitempty"`
}

// NewBeneficiaryVASP instantiates a new BeneficiaryVASP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeneficiaryVASP() *BeneficiaryVASP {
	this := BeneficiaryVASP{}
	return &this
}

// NewBeneficiaryVASPWithDefaults instantiates a new BeneficiaryVASP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeneficiaryVASPWithDefaults() *BeneficiaryVASP {
	this := BeneficiaryVASP{}
	return &this
}

// GetBeneficiaryVASP returns the BeneficiaryVASP field value if set, zero value otherwise.
func (o *BeneficiaryVASP) GetBeneficiaryVASP() Person {
	if o == nil || IsNil(o.BeneficiaryVASP) {
		var ret Person
		return ret
	}
	return *o.BeneficiaryVASP
}

// GetBeneficiaryVASPOk returns a tuple with the BeneficiaryVASP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeneficiaryVASP) GetBeneficiaryVASPOk() (*Person, bool) {
	if o == nil || IsNil(o.BeneficiaryVASP) {
		return nil, false
	}
	return o.BeneficiaryVASP, true
}

// HasBeneficiaryVASP returns a boolean if a field has been set.
func (o *BeneficiaryVASP) HasBeneficiaryVASP() bool {
	if o != nil && !IsNil(o.BeneficiaryVASP) {
		return true
	}

	return false
}

// SetBeneficiaryVASP gets a reference to the given Person and assigns it to the BeneficiaryVASP field.
func (o *BeneficiaryVASP) SetBeneficiaryVASP(v Person) {
	o.BeneficiaryVASP = &v
}

func (o BeneficiaryVASP) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BeneficiaryVASP) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BeneficiaryVASP) {
		toSerialize["beneficiaryVASP"] = o.BeneficiaryVASP
	}
	return toSerialize, nil
}

type NullableBeneficiaryVASP struct {
	value *BeneficiaryVASP
	isSet bool
}

func (v NullableBeneficiaryVASP) Get() *BeneficiaryVASP {
	return v.value
}

func (v *NullableBeneficiaryVASP) Set(val *BeneficiaryVASP) {
	v.value = val
	v.isSet = true
}

func (v NullableBeneficiaryVASP) IsSet() bool {
	return v.isSet
}

func (v *NullableBeneficiaryVASP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeneficiaryVASP(val *BeneficiaryVASP) *NullableBeneficiaryVASP {
	return &NullableBeneficiaryVASP{value: val, isSet: true}
}

func (v NullableBeneficiaryVASP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeneficiaryVASP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


