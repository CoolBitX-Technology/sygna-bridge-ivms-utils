/*
Bridge

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ivms101

import (
	"encoding/json"
)

// checks if the PayloadMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayloadMetadata{}

// PayloadMetadata struct for PayloadMetadata
type PayloadMetadata struct {
	TransliterationMethod []string `json:"transliterationMethod,omitempty"`
	PayloadVersion *string `json:"payloadVersion,omitempty"`
}

// NewPayloadMetadata instantiates a new PayloadMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayloadMetadata() *PayloadMetadata {
	this := PayloadMetadata{}
	return &this
}

// NewPayloadMetadataWithDefaults instantiates a new PayloadMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayloadMetadataWithDefaults() *PayloadMetadata {
	this := PayloadMetadata{}
	return &this
}

// GetTransliterationMethod returns the TransliterationMethod field value if set, zero value otherwise.
func (o *PayloadMetadata) GetTransliterationMethod() []string {
	if o == nil || IsNil(o.TransliterationMethod) {
		var ret []string
		return ret
	}
	return o.TransliterationMethod
}

// GetTransliterationMethodOk returns a tuple with the TransliterationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadMetadata) GetTransliterationMethodOk() ([]string, bool) {
	if o == nil || IsNil(o.TransliterationMethod) {
		return nil, false
	}
	return o.TransliterationMethod, true
}

// HasTransliterationMethod returns a boolean if a field has been set.
func (o *PayloadMetadata) HasTransliterationMethod() bool {
	if o != nil && !IsNil(o.TransliterationMethod) {
		return true
	}

	return false
}

// SetTransliterationMethod gets a reference to the given []string and assigns it to the TransliterationMethod field.
func (o *PayloadMetadata) SetTransliterationMethod(v []string) {
	o.TransliterationMethod = v
}

// GetPayloadVersion returns the PayloadVersion field value if set, zero value otherwise.
func (o *PayloadMetadata) GetPayloadVersion() string {
	if o == nil || IsNil(o.PayloadVersion) {
		var ret string
		return ret
	}
	return *o.PayloadVersion
}

// GetPayloadVersionOk returns a tuple with the PayloadVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadMetadata) GetPayloadVersionOk() (*string, bool) {
	if o == nil || IsNil(o.PayloadVersion) {
		return nil, false
	}
	return o.PayloadVersion, true
}

// HasPayloadVersion returns a boolean if a field has been set.
func (o *PayloadMetadata) HasPayloadVersion() bool {
	if o != nil && !IsNil(o.PayloadVersion) {
		return true
	}

	return false
}

// SetPayloadVersion gets a reference to the given string and assigns it to the PayloadVersion field.
func (o *PayloadMetadata) SetPayloadVersion(v string) {
	o.PayloadVersion = &v
}

func (o PayloadMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayloadMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransliterationMethod) {
		toSerialize["transliterationMethod"] = o.TransliterationMethod
	}
	if !IsNil(o.PayloadVersion) {
		toSerialize["payloadVersion"] = o.PayloadVersion
	}
	return toSerialize, nil
}

type NullablePayloadMetadata struct {
	value *PayloadMetadata
	isSet bool
}

func (v NullablePayloadMetadata) Get() *PayloadMetadata {
	return v.value
}

func (v *NullablePayloadMetadata) Set(val *PayloadMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullablePayloadMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullablePayloadMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayloadMetadata(val *PayloadMetadata) *NullablePayloadMetadata {
	return &NullablePayloadMetadata{value: val, isSet: true}
}

func (v NullablePayloadMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayloadMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


