/*
Bridge

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ivms101

import (
	"encoding/json"
)

// checks if the OriginatingVASP type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginatingVASP{}

// OriginatingVASP struct for OriginatingVASP
type OriginatingVASP struct {
	OriginatingVASP *Person `json:"originatingVASP,omitempty"`
}

// NewOriginatingVASP instantiates a new OriginatingVASP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginatingVASP() *OriginatingVASP {
	this := OriginatingVASP{}
	return &this
}

// NewOriginatingVASPWithDefaults instantiates a new OriginatingVASP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginatingVASPWithDefaults() *OriginatingVASP {
	this := OriginatingVASP{}
	return &this
}

// GetOriginatingVASP returns the OriginatingVASP field value if set, zero value otherwise.
func (o *OriginatingVASP) GetOriginatingVASP() Person {
	if o == nil || IsNil(o.OriginatingVASP) {
		var ret Person
		return ret
	}
	return *o.OriginatingVASP
}

// GetOriginatingVASPOk returns a tuple with the OriginatingVASP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginatingVASP) GetOriginatingVASPOk() (*Person, bool) {
	if o == nil || IsNil(o.OriginatingVASP) {
		return nil, false
	}
	return o.OriginatingVASP, true
}

// HasOriginatingVASP returns a boolean if a field has been set.
func (o *OriginatingVASP) HasOriginatingVASP() bool {
	if o != nil && !IsNil(o.OriginatingVASP) {
		return true
	}

	return false
}

// SetOriginatingVASP gets a reference to the given Person and assigns it to the OriginatingVASP field.
func (o *OriginatingVASP) SetOriginatingVASP(v Person) {
	o.OriginatingVASP = &v
}

func (o OriginatingVASP) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginatingVASP) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OriginatingVASP) {
		toSerialize["originatingVASP"] = o.OriginatingVASP
	}
	return toSerialize, nil
}

type NullableOriginatingVASP struct {
	value *OriginatingVASP
	isSet bool
}

func (v NullableOriginatingVASP) Get() *OriginatingVASP {
	return v.value
}

func (v *NullableOriginatingVASP) Set(val *OriginatingVASP) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginatingVASP) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginatingVASP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginatingVASP(val *OriginatingVASP) *NullableOriginatingVASP {
	return &NullableOriginatingVASP{value: val, isSet: true}
}

func (v NullableOriginatingVASP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginatingVASP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


