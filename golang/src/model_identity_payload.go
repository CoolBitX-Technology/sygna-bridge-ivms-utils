/*
 * Bridge
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ivms101

import (
	"encoding/json"
)

// IdentityPayload struct for IdentityPayload
type IdentityPayload struct {
	Originator *Originator `json:"originator,omitempty"`
	Beneficiary *Beneficiary `json:"beneficiary,omitempty"`
	OriginatingVasp *OriginatingVasp `json:"originating_vasp,omitempty"`
	BeneficiaryVasp *BeneficiaryVasp `json:"beneficiary_vasp,omitempty"`
	TransferPath *[]IntermediaryVasp `json:"transfer_path,omitempty"`
	PayloadMetadata *PayloadMetadata `json:"payload_metadata,omitempty"`
}

// NewIdentityPayload instantiates a new IdentityPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityPayload() *IdentityPayload {
	this := IdentityPayload{}
	return &this
}

// NewIdentityPayloadWithDefaults instantiates a new IdentityPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityPayloadWithDefaults() *IdentityPayload {
	this := IdentityPayload{}
	return &this
}

// GetOriginator returns the Originator field value if set, zero value otherwise.
func (o *IdentityPayload) GetOriginator() Originator {
	if o == nil || o.Originator == nil {
		var ret Originator
		return ret
	}
	return *o.Originator
}

// GetOriginatorOk returns a tuple with the Originator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPayload) GetOriginatorOk() (*Originator, bool) {
	if o == nil || o.Originator == nil {
		return nil, false
	}
	return o.Originator, true
}

// HasOriginator returns a boolean if a field has been set.
func (o *IdentityPayload) HasOriginator() bool {
	if o != nil && o.Originator != nil {
		return true
	}

	return false
}

// SetOriginator gets a reference to the given Originator and assigns it to the Originator field.
func (o *IdentityPayload) SetOriginator(v Originator) {
	o.Originator = &v
}

// GetBeneficiary returns the Beneficiary field value if set, zero value otherwise.
func (o *IdentityPayload) GetBeneficiary() Beneficiary {
	if o == nil || o.Beneficiary == nil {
		var ret Beneficiary
		return ret
	}
	return *o.Beneficiary
}

// GetBeneficiaryOk returns a tuple with the Beneficiary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPayload) GetBeneficiaryOk() (*Beneficiary, bool) {
	if o == nil || o.Beneficiary == nil {
		return nil, false
	}
	return o.Beneficiary, true
}

// HasBeneficiary returns a boolean if a field has been set.
func (o *IdentityPayload) HasBeneficiary() bool {
	if o != nil && o.Beneficiary != nil {
		return true
	}

	return false
}

// SetBeneficiary gets a reference to the given Beneficiary and assigns it to the Beneficiary field.
func (o *IdentityPayload) SetBeneficiary(v Beneficiary) {
	o.Beneficiary = &v
}

// GetOriginatingVasp returns the OriginatingVasp field value if set, zero value otherwise.
func (o *IdentityPayload) GetOriginatingVasp() OriginatingVasp {
	if o == nil || o.OriginatingVasp == nil {
		var ret OriginatingVasp
		return ret
	}
	return *o.OriginatingVasp
}

// GetOriginatingVaspOk returns a tuple with the OriginatingVasp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPayload) GetOriginatingVaspOk() (*OriginatingVasp, bool) {
	if o == nil || o.OriginatingVasp == nil {
		return nil, false
	}
	return o.OriginatingVasp, true
}

// HasOriginatingVasp returns a boolean if a field has been set.
func (o *IdentityPayload) HasOriginatingVasp() bool {
	if o != nil && o.OriginatingVasp != nil {
		return true
	}

	return false
}

// SetOriginatingVasp gets a reference to the given OriginatingVasp and assigns it to the OriginatingVasp field.
func (o *IdentityPayload) SetOriginatingVasp(v OriginatingVasp) {
	o.OriginatingVasp = &v
}

// GetBeneficiaryVasp returns the BeneficiaryVasp field value if set, zero value otherwise.
func (o *IdentityPayload) GetBeneficiaryVasp() BeneficiaryVasp {
	if o == nil || o.BeneficiaryVasp == nil {
		var ret BeneficiaryVasp
		return ret
	}
	return *o.BeneficiaryVasp
}

// GetBeneficiaryVaspOk returns a tuple with the BeneficiaryVasp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPayload) GetBeneficiaryVaspOk() (*BeneficiaryVasp, bool) {
	if o == nil || o.BeneficiaryVasp == nil {
		return nil, false
	}
	return o.BeneficiaryVasp, true
}

// HasBeneficiaryVasp returns a boolean if a field has been set.
func (o *IdentityPayload) HasBeneficiaryVasp() bool {
	if o != nil && o.BeneficiaryVasp != nil {
		return true
	}

	return false
}

// SetBeneficiaryVasp gets a reference to the given BeneficiaryVasp and assigns it to the BeneficiaryVasp field.
func (o *IdentityPayload) SetBeneficiaryVasp(v BeneficiaryVasp) {
	o.BeneficiaryVasp = &v
}

// GetTransferPath returns the TransferPath field value if set, zero value otherwise.
func (o *IdentityPayload) GetTransferPath() []IntermediaryVasp {
	if o == nil || o.TransferPath == nil {
		var ret []IntermediaryVasp
		return ret
	}
	return *o.TransferPath
}

// GetTransferPathOk returns a tuple with the TransferPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPayload) GetTransferPathOk() (*[]IntermediaryVasp, bool) {
	if o == nil || o.TransferPath == nil {
		return nil, false
	}
	return o.TransferPath, true
}

// HasTransferPath returns a boolean if a field has been set.
func (o *IdentityPayload) HasTransferPath() bool {
	if o != nil && o.TransferPath != nil {
		return true
	}

	return false
}

// SetTransferPath gets a reference to the given []IntermediaryVasp and assigns it to the TransferPath field.
func (o *IdentityPayload) SetTransferPath(v []IntermediaryVasp) {
	o.TransferPath = &v
}

// GetPayloadMetadata returns the PayloadMetadata field value if set, zero value otherwise.
func (o *IdentityPayload) GetPayloadMetadata() PayloadMetadata {
	if o == nil || o.PayloadMetadata == nil {
		var ret PayloadMetadata
		return ret
	}
	return *o.PayloadMetadata
}

// GetPayloadMetadataOk returns a tuple with the PayloadMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPayload) GetPayloadMetadataOk() (*PayloadMetadata, bool) {
	if o == nil || o.PayloadMetadata == nil {
		return nil, false
	}
	return o.PayloadMetadata, true
}

// HasPayloadMetadata returns a boolean if a field has been set.
func (o *IdentityPayload) HasPayloadMetadata() bool {
	if o != nil && o.PayloadMetadata != nil {
		return true
	}

	return false
}

// SetPayloadMetadata gets a reference to the given PayloadMetadata and assigns it to the PayloadMetadata field.
func (o *IdentityPayload) SetPayloadMetadata(v PayloadMetadata) {
	o.PayloadMetadata = &v
}

func (o IdentityPayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Originator != nil {
		toSerialize["originator"] = o.Originator
	}
	if o.Beneficiary != nil {
		toSerialize["beneficiary"] = o.Beneficiary
	}
	if o.OriginatingVasp != nil {
		toSerialize["originating_vasp"] = o.OriginatingVasp
	}
	if o.BeneficiaryVasp != nil {
		toSerialize["beneficiary_vasp"] = o.BeneficiaryVasp
	}
	if o.TransferPath != nil {
		toSerialize["transfer_path"] = o.TransferPath
	}
	if o.PayloadMetadata != nil {
		toSerialize["payload_metadata"] = o.PayloadMetadata
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityPayload struct {
	value *IdentityPayload
	isSet bool
}

func (v NullableIdentityPayload) Get() *IdentityPayload {
	return v.value
}

func (v *NullableIdentityPayload) Set(val *IdentityPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityPayload(val *IdentityPayload) *NullableIdentityPayload {
	return &NullableIdentityPayload{value: val, isSet: true}
}

func (v NullableIdentityPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


