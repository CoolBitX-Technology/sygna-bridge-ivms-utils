/*
 * Bridge
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ivms101

import (
	"encoding/json"
)

// Originator struct for Originator
type Originator struct {
	OriginatorPersons *[]Person `json:"originator_persons,omitempty"`
	AccountNumbers *[]string `json:"account_numbers,omitempty"`
}

// NewOriginator instantiates a new Originator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginator() *Originator {
	this := Originator{}
	return &this
}

// NewOriginatorWithDefaults instantiates a new Originator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginatorWithDefaults() *Originator {
	this := Originator{}
	return &this
}

// GetOriginatorPersons returns the OriginatorPersons field value if set, zero value otherwise.
func (o *Originator) GetOriginatorPersons() []Person {
	if o == nil || o.OriginatorPersons == nil {
		var ret []Person
		return ret
	}
	return *o.OriginatorPersons
}

// GetOriginatorPersonsOk returns a tuple with the OriginatorPersons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Originator) GetOriginatorPersonsOk() (*[]Person, bool) {
	if o == nil || o.OriginatorPersons == nil {
		return nil, false
	}
	return o.OriginatorPersons, true
}

// HasOriginatorPersons returns a boolean if a field has been set.
func (o *Originator) HasOriginatorPersons() bool {
	if o != nil && o.OriginatorPersons != nil {
		return true
	}

	return false
}

// SetOriginatorPersons gets a reference to the given []Person and assigns it to the OriginatorPersons field.
func (o *Originator) SetOriginatorPersons(v []Person) {
	o.OriginatorPersons = &v
}

// GetAccountNumbers returns the AccountNumbers field value if set, zero value otherwise.
func (o *Originator) GetAccountNumbers() []string {
	if o == nil || o.AccountNumbers == nil {
		var ret []string
		return ret
	}
	return *o.AccountNumbers
}

// GetAccountNumbersOk returns a tuple with the AccountNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Originator) GetAccountNumbersOk() (*[]string, bool) {
	if o == nil || o.AccountNumbers == nil {
		return nil, false
	}
	return o.AccountNumbers, true
}

// HasAccountNumbers returns a boolean if a field has been set.
func (o *Originator) HasAccountNumbers() bool {
	if o != nil && o.AccountNumbers != nil {
		return true
	}

	return false
}

// SetAccountNumbers gets a reference to the given []string and assigns it to the AccountNumbers field.
func (o *Originator) SetAccountNumbers(v []string) {
	o.AccountNumbers = &v
}

func (o Originator) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OriginatorPersons != nil {
		toSerialize["originator_persons"] = o.OriginatorPersons
	}
	if o.AccountNumbers != nil {
		toSerialize["account_numbers"] = o.AccountNumbers
	}
	return json.Marshal(toSerialize)
}

type NullableOriginator struct {
	value *Originator
	isSet bool
}

func (v NullableOriginator) Get() *Originator {
	return v.value
}

func (v *NullableOriginator) Set(val *Originator) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginator) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginator(val *Originator) *NullableOriginator {
	return &NullableOriginator{value: val, isSet: true}
}

func (v NullableOriginator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


